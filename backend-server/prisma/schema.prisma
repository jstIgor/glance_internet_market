generator client {
  provider = "prisma-client-js"
  output   = "./__generated__"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  password           String?
  displayName        String     @map("display_name")
  picture            String?    @default("no-avatar.png")
  role               Role       @default(USER)
  isVerified         Boolean    @default(false) @map("is_verified")
  isTwoFactorEnabled Boolean    @default(false) @map("is_two_factor_enabled")
  method             AuthMethod @default(CREDENTIALS)
  accounts           Account[]
  createdAt          DateTime   @default(now()) @map("created_at")
  updatedAt          DateTime   @updatedAt @map("updated_at")
  tokens             Token[]
  verificationToken  String?

  @@map("users")
}

enum AuthMethod {
  CREDENTIALS
  YANDEX
  GOOGLE
}

enum Role {
  ADMIN
  USER
}

model Account {
  id           String    @id @default(uuid())
  user         User      @relation(fields: [userId], references: [id])
  userId       String    @map("user_id")
  refreshToken String?   @map("refresh_token")
  accessToken  String?   @map("access_token")
  expiresAt    DateTime? @map("expires_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  @@map("accounts")
}

model Token {
  id        String    @id @default(uuid())
  email     String    @map("email")
  token     String    @map("token")
  type      TokenType
  expiresAt DateTime  @map("expires_at")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?   @map("user_id")

  @@map("tokens")
}

enum TokenType {
  VERIFICATION
  PASSWORD_RESET
  TWO_FACTOR
}
